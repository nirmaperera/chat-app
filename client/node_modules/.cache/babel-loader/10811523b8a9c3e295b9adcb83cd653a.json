{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nirmaperera/Desktop/chat-app/client/src/components/InputMenu/InputMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { ChatContext } from '../../chatContext';\nimport Gif from '../gifSearch/gif';\nimport ImageInput from '../ImageInput/ImageInput';\nimport GifIcon from '@material-ui/icons/Gif';\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\nimport CloseIcon from '@material-ui/icons/Close';\nimport sticker from '../../assets/images/sticker.png';\nimport './InputMenu.scss';\n\nconst InputMenu = ({\n  setMessage\n}) => {\n  _s();\n\n  const [clickGif, setClickGif] = useState(false);\n  const [clickImg, setClickImg] = useState(false);\n  const [clickStickers, setClickStickers] = useState(false);\n  const {\n    theme\n  } = useContext(ChatContext);\n  const [themeDark] = theme;\n\n  const handleInputs = input => {\n    if (input === 'gif') {\n      setClickGif(true);\n      setClickImg(false);\n      setClickStickers(false);\n    } else if (input === 'img') {\n      setClickImg(true);\n      setClickGif(false);\n      setClickStickers(false);\n    } else {\n      setClickStickers(true);\n      setClickImg(false);\n      setClickGif(false);\n    }\n  };\n\n  const handleClose = () => {\n    setClickImg(false);\n    setClickGif(false);\n    setClickStickers(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: themeDark ? 'inputMenu inputMenu__dark' : 'inputMenu inputMenu__light',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputMenu__inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(GifIcon, {\n          onClick: () => handleInputs('gif'),\n          className: themeDark ? 'inputMenu__icon inputMenu__icon__dark' : 'inputMenu__icon inputMenu__icon__light'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ImageSearchIcon, {\n          onClick: () => handleInputs('img'),\n          className: themeDark ? 'inputMenu__icon inputMenu__icon__dark' : 'inputMenu__icon inputMenu__icon__light'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: sticker,\n          width: \"48px\",\n          onClick: () => handleInputs('stickers'),\n          className: themeDark ? 'inputMenu__icon inputMenu__icon__dark' : 'inputMenu__icon inputMenu__icon__light',\n          alt: \"stickers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: clickGif || clickImg || clickStickers ? /*#__PURE__*/_jsxDEV(CloseIcon, {\n          className: \"inputMenu__close\",\n          onClick: () => handleClose()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 47\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: clickGif ? /*#__PURE__*/_jsxDEV(Gif, {\n        setMessage: setMessage,\n        library: \"gifs\",\n        setClickGif: setClickGif\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this) : clickStickers ? /*#__PURE__*/_jsxDEV(Gif, {\n        setMessage: setMessage,\n        library: \"stickers\",\n        setClickStickers: setClickStickers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 22\n      }, this) : clickImg ? /*#__PURE__*/_jsxDEV(ImageInput, {\n        setMessage: setMessage,\n        setClickImg: setClickImg,\n        themeDark: themeDark\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 18\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n\n_s(InputMenu, \"9FDTeLXQQ+v/CkrhBNhexO86R+I=\");\n\n_c = InputMenu;\nexport default InputMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputMenu\");","map":{"version":3,"sources":["/Users/nirmaperera/Desktop/chat-app/client/src/components/InputMenu/InputMenu.js"],"names":["React","useState","useContext","ChatContext","Gif","ImageInput","GifIcon","ImageSearchIcon","CloseIcon","sticker","InputMenu","setMessage","clickGif","setClickGif","clickImg","setClickImg","clickStickers","setClickStickers","theme","themeDark","handleInputs","input","handleClose"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { ChatContext } from '../../chatContext';\n\nimport Gif from '../gifSearch/gif';\nimport ImageInput from '../ImageInput/ImageInput';\n\nimport GifIcon from '@material-ui/icons/Gif';\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\nimport CloseIcon from '@material-ui/icons/Close';\nimport sticker from '../../assets/images/sticker.png'\n\nimport './InputMenu.scss';\n\nconst InputMenu = ({ setMessage }) => {\n\tconst [clickGif, setClickGif] = useState(false);\n\tconst [clickImg, setClickImg] = useState(false);\n\tconst [clickStickers, setClickStickers] = useState(false);\n\tconst { theme } = useContext(ChatContext);\n\tconst [themeDark] = theme;\n\n\tconst handleInputs = (input) => {\n\t\tif (input === 'gif') {\n\t\t\tsetClickGif(true); setClickImg(false); setClickStickers(false)\n\t\t} else if (input === 'img') {\n\t\t\tsetClickImg(true); setClickGif(false); setClickStickers(false);\n\t\t} else {\n\t\t\tsetClickStickers(true); setClickImg(false); setClickGif(false);\n\t\t}\n\t}\n\n\tconst handleClose = () => {\n\t\tsetClickImg(false); setClickGif(false); setClickStickers(false);\n\t}\n\n\treturn (\n\t\t<div className={themeDark ? 'inputMenu inputMenu__dark' : 'inputMenu inputMenu__light'}>\n\n\t\t\t<div className=\"inputMenu__inner\">\n\t\t\t\t<div>\n\t\t\t\t\t<GifIcon onClick={() => handleInputs('gif')} className={themeDark ? 'inputMenu__icon inputMenu__icon__dark' : 'inputMenu__icon inputMenu__icon__light'} />\n\t\t\t\t\t<ImageSearchIcon onClick={() => handleInputs('img')} className={themeDark ? 'inputMenu__icon inputMenu__icon__dark' : 'inputMenu__icon inputMenu__icon__light'} />\n\t\t\t\t\t<img src={sticker} width='48px' onClick={() => handleInputs('stickers')} className={themeDark ? 'inputMenu__icon inputMenu__icon__dark' : 'inputMenu__icon inputMenu__icon__light'} alt=\"stickers\" />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{clickGif || clickImg || clickStickers ? <CloseIcon className=\"inputMenu__close\" onClick={() => handleClose()} /> : null}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t{clickGif ? <Gif setMessage={setMessage} library={\"gifs\"} setClickGif={setClickGif} /> :\n\t\t\t\t\tclickStickers ? <Gif setMessage={setMessage} library={\"stickers\"} setClickStickers={setClickStickers} /> :\n\t\t\t\t\t\tclickImg ? <ImageInput setMessage={setMessage} setClickImg={setClickImg} themeDark={themeDark} /> : null}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default InputMenu;\n"]},"metadata":{},"sourceType":"module"}