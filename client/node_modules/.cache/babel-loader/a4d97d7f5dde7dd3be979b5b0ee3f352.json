{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nirmaperera/Desktop/chat-app/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport InfoBar from '../InforBar/InforBar';\nimport InputMenu from '../InputMenu/InputMenu';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nimport TextContainer from '../TextContainer/TextContainer';\nimport errorImg from '../../assets/images/error.png';\nimport './Chat.scss'; //const ENDPOINT = 'https://chat-application23.herokuapp.com/'\n\nconst ENDPOINT = 'localhost:5000';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [error, setError] = useState(false);\n  const [openMenu, setOpenMenu] = useState(true);\n  const [time, setTime] = useState(\"\");\n  window.scrollTo(0, 0);\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        setError(true);\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    const time = new Date().toLocaleTimeString();\n    socket.on('message', message => {\n      setMessages(messages => [...messages, message]);\n    });\n    socket.on('message', time => {\n      setTime(date);\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, []);\n\n  const sendMessage = event => {\n    event.preventDefault();\n    console.log(message, 'MESSAGES');\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(openMenu, \"Open menu\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__error\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: errorImg,\n          alt: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \" Join TeleChat! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatInner\",\n      children: [/*#__PURE__*/_jsxDEV(TextContainer, {\n        users: users,\n        name: name,\n        room: room,\n        setOpenMenu: setOpenMenu,\n        menu: openMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatInner__main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatInner__inner\",\n          children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n            room: room,\n            setOpenMenu: setOpenMenu,\n            menu: openMenu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Messages, {\n            messages: messages,\n            name: name,\n            time: time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(InputMenu, {\n            setMessage: setMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            message: message,\n            setMessage: setMessage,\n            sendMessage: sendMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Chat, \"OxTzHfM1absNtvbiSWMLOrGfPAk=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/nirmaperera/Desktop/chat-app/client/src/components/Chat/Chat.js"],"names":["React","useEffect","useState","Link","queryString","io","InfoBar","InputMenu","Input","Messages","TextContainer","errorImg","ENDPOINT","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","error","setError","openMenu","setOpenMenu","time","setTime","window","scrollTo","parse","search","emit","alert","Date","toLocaleTimeString","on","date","sendMessage","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nimport InfoBar from '../InforBar/InforBar';\nimport InputMenu from '../InputMenu/InputMenu';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nimport TextContainer from '../TextContainer/TextContainer';\n\nimport errorImg from '../../assets/images/error.png';\nimport './Chat.scss';\n\n//const ENDPOINT = 'https://chat-application23.herokuapp.com/'\nconst ENDPOINT = 'localhost:5000';\n\nlet socket;\n\nconst Chat = ({ location }) => {\n\tconst [name, setName] = useState('');\n\tconst [room, setRoom] = useState('');\n\tconst [users, setUsers] = useState('');\n\tconst [message, setMessage] = useState('');\n\tconst [messages, setMessages] = useState([]);\n\tconst [error, setError] = useState(false);\n\tconst [openMenu, setOpenMenu] = useState(true)\n\tconst [time, setTime] = useState(\"\")\n\twindow.scrollTo(0, 0);\n\n\tuseEffect(() => {\n\t\tconst { name, room } = queryString.parse(location.search);\n\n\t\tsocket = io(ENDPOINT);\n\n\t\tsetRoom(room);\n\t\tsetName(name)\n\n\t\tsocket.emit('join', { name, room }, (error) => {\n\t\t\tif (error) {\n\t\t\t\tsetError(true)\n\t\t\t\talert(error);\n\n\t\t\t}\n\t\t});\n\t}, [ENDPOINT, location.search]);\n\n\tuseEffect(() => {\n\n\t\tconst time = new Date().toLocaleTimeString();\n\t\tsocket.on('message', message => {\n\t\t\tsetMessages(messages => [...messages, message]);\n\t\t});\n\n\t\tsocket.on('message', time => {\n\t\t\tsetTime(date);\n\t\t});\n\n\t\tsocket.on(\"roomData\", ({ users }) => {\n\t\t\tsetUsers(users);\n\t\t});\n\t}, []);\n\n\tconst sendMessage = (event) => {\n\t\tevent.preventDefault();\n\t\tconsole.log(message, 'MESSAGES')\n\n\t\tif (message) {\n\t\t\tsocket.emit('sendMessage', message, () => setMessage(''));\n\t\t}\n\t}\n\n\tconsole.log(openMenu, \"Open menu\");\n\treturn (\n\t\t<div className=\"chat\">\n\t\t\t{error ? <div className=\"chat__error\">\n\t\t\t\t<div> <img src={errorImg} alt=\"error\"></img></div>\n\t\t\t\t<Link to={\"/\"}>\n\t\t\t\t\t<button> Join TeleChat! </button>\n\t\t\t\t</Link>\n\n\t\t\t</div> :\n\t\t\t\t<div className=\"chatInner\">\n\t\t\t\t\t<TextContainer users={users} name={name} room={room} setOpenMenu={setOpenMenu} menu={openMenu} />\n\t\t\t\t\t<div className=\"chatInner__main\">\n\t\t\t\t\t\t<div className=\"chatInner__inner\">\n\t\t\t\t\t\t\t<InfoBar room={room} setOpenMenu={setOpenMenu} menu={openMenu} />\n\t\t\t\t\t\t\t<Messages messages={messages} name={name} time={time} />\n\t\t\t\t\t\t\t<InputMenu setMessage={setMessage} />\n\t\t\t\t\t\t\t<Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}