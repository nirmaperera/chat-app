{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nirmaperera/Desktop/chat-app/client/src/components/gifSearch/gif.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactGiphySearchbox from \"react-giphy-searchbox\";\nimport './gifSearch.scss';\n\nconst Gif = ({\n  setMessage,\n  setClickGif,\n  setClickStickers,\n  library\n}) => {\n  _s();\n\n  const [gif, setGif] = useState(\"\");\n  const [stickers, setStickers] = useState(\"\");\n\n  const selectMedia = item => {\n    console.log(item);\n\n    if (library === 'stickers') {\n      setStickers(item.images.original.url);\n      setMessage(item.images.original.url);\n      setClickStickers(false);\n    } else {\n      setGif(item.images.original.url);\n      setMessage(item.images.original.url);\n      setClickGif(false);\n    }\n  };\n\n  let placeholder = library === \"stickers\" ? \"Search for Stickers\" : \"Search for GIFs\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"giphy\",\n    children: /*#__PURE__*/_jsxDEV(ReactGiphySearchbox, {\n      apiKey: \"7mG2YLq7OBLyrlxpi0o64vb0mB8wHHPh\",\n      onSelect: item => selectMedia(item),\n      library: library,\n      searchPlaceholder: placeholder,\n      masonryConfig: [{\n        columns: 3,\n        imageWidth: 110,\n        gutter: 5\n      }, {\n        mq: \"700px\",\n        columns: 6,\n        imageWidth: 120,\n        gutter: 5\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Gif, \"5o7WDhdf+rIu60CDHjTPGY/nzn4=\");\n\n_c = Gif;\nexport default Gif;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gif\");","map":{"version":3,"sources":["/Users/nirmaperera/Desktop/chat-app/client/src/components/gifSearch/gif.js"],"names":["React","useState","ReactGiphySearchbox","Gif","setMessage","setClickGif","setClickStickers","library","gif","setGif","stickers","setStickers","selectMedia","item","console","log","images","original","url","placeholder","columns","imageWidth","gutter","mq"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AAEA,OAAO,kBAAP;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,WAAd;AAA2BC,EAAAA,gBAA3B;AAA6CC,EAAAA;AAA7C,CAAD,KAA4D;AAAA;;AACvE,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMW,WAAW,GAAIC,IAAD,IAAU;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,QAAIN,OAAO,KAAK,UAAhB,EAA4B;AAC3BI,MAAAA,WAAW,CAACE,IAAI,CAACG,MAAL,CAAYC,QAAZ,CAAqBC,GAAtB,CAAX;AACAd,MAAAA,UAAU,CAACS,IAAI,CAACG,MAAL,CAAYC,QAAZ,CAAqBC,GAAtB,CAAV;AACAZ,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA,KAJD,MAKK;AACJG,MAAAA,MAAM,CAACI,IAAI,CAACG,MAAL,CAAYC,QAAZ,CAAqBC,GAAtB,CAAN;AACAd,MAAAA,UAAU,CAACS,IAAI,CAACG,MAAL,CAAYC,QAAZ,CAAqBC,GAAtB,CAAV;AACAb,MAAAA,WAAW,CAAC,KAAD,CAAX;AAEA;AACD,GAbD;;AAeA,MAAIc,WAAW,GAAGZ,OAAO,KAAK,UAAZ,GAAyB,qBAAzB,GAAiD,iBAAnE;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACC,QAAC,mBAAD;AACC,MAAA,MAAM,EAAC,kCADR;AAEC,MAAA,QAAQ,EAAEM,IAAI,IAAID,WAAW,CAACC,IAAD,CAF9B;AAGC,MAAA,OAAO,EAAEN,OAHV;AAIC,MAAA,iBAAiB,EAAEY,WAJpB;AAKC,MAAA,aAAa,EAAE,CACd;AAAEC,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,UAAU,EAAE,GAA1B;AAA+BC,QAAAA,MAAM,EAAE;AAAvC,OADc,EAEd;AAAEC,QAAAA,EAAE,EAAE,OAAN;AAAeH,QAAAA,OAAO,EAAE,CAAxB;AAA2BC,QAAAA,UAAU,EAAE,GAAvC;AAA4CC,QAAAA,MAAM,EAAE;AAApD,OAFc;AALhB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAcA,CAnCD;;GAAMnB,G;;KAAAA,G;AAqCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport ReactGiphySearchbox from \"react-giphy-searchbox\";\n\nimport './gifSearch.scss';\n\nconst Gif = ({ setMessage, setClickGif, setClickStickers, library }) => {\n\tconst [gif, setGif] = useState(\"\");\n\tconst [stickers, setStickers] = useState(\"\");\n\n\tconst selectMedia = (item) => {\n\t\tconsole.log(item);\n\t\tif (library === 'stickers') {\n\t\t\tsetStickers(item.images.original.url)\n\t\t\tsetMessage(item.images.original.url)\n\t\t\tsetClickStickers(false);\n\t\t}\n\t\telse {\n\t\t\tsetGif(item.images.original.url)\n\t\t\tsetMessage(item.images.original.url)\n\t\t\tsetClickGif(false)\n\n\t\t}\n\t}\n\n\tlet placeholder = library === \"stickers\" ? \"Search for Stickers\" : \"Search for GIFs\";\n\n\treturn (\n\t\t<div className=\"giphy\">\n\t\t\t<ReactGiphySearchbox\n\t\t\t\tapiKey=\"7mG2YLq7OBLyrlxpi0o64vb0mB8wHHPh\"\n\t\t\t\tonSelect={item => selectMedia(item)}\n\t\t\t\tlibrary={library}\n\t\t\t\tsearchPlaceholder={placeholder}\n\t\t\t\tmasonryConfig={[\n\t\t\t\t\t{ columns: 3, imageWidth: 110, gutter: 5 },\n\t\t\t\t\t{ mq: \"700px\", columns: 6, imageWidth: 120, gutter: 5 }\n\t\t\t\t]}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default Gif;\n"]},"metadata":{},"sourceType":"module"}