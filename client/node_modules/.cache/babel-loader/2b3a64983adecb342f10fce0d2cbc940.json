{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nirmaperera/Desktop/chat-app/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport InfoBar from '../InforBar/InforBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nimport TextContainer from '../TextContainer/TextContainer';\nimport dots from '../../images/dots.png';\nimport './Chat.css';\nimport InputMenu from '../InputMenu/InputMenu'; //const ENDPOINT = 'https://chat-application23.herokuapp.com/'\n\nconst ENDPOINT = 'localhost:5000';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [typing, setTyping] = useState(false);\n  const [typeMess, setTypeMess] = useState(\"\");\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(messages => [...messages, message]);\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, []);\n  useEffect(() => {\n    socket.emit('typing', {\n      typing\n    }, error => {\n      console.log(typing, 'ererererere');\n      setTypeMess(typing);\n    });\n  }, [typing]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(typeMess);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(TextContainer, {\n      users: users,\n      name: name,\n      room: room\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"image\", {\n        src: dots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n          room: room\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Messages, {\n          messages: messages,\n          name: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), typeMess, /*#__PURE__*/_jsxDEV(InputMenu, {\n          setMessage: setMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          message: message,\n          setMessage: setMessage,\n          setTyping: setTyping,\n          sendMessage: sendMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"creokSbk9ljuS16PlRhazCZWh/M=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/nirmaperera/Desktop/chat-app/client/src/components/Chat/Chat.js"],"names":["React","useEffect","useState","queryString","io","InfoBar","Input","Messages","TextContainer","dots","InputMenu","ENDPOINT","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","typing","setTyping","typeMess","setTypeMess","parse","search","emit","error","alert","on","console","log","sendMessage","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nimport InfoBar from '../InforBar/InforBar';\n\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nimport TextContainer from '../TextContainer/TextContainer';\nimport dots from '../../images/dots.png';\n\nimport './Chat.css';\nimport InputMenu from '../InputMenu/InputMenu';\n\n//const ENDPOINT = 'https://chat-application23.herokuapp.com/'\nconst ENDPOINT = 'localhost:5000';\nlet socket;\n\nconst Chat = ({ location }) => {\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [users, setUsers] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [typing, setTyping] = useState(false);\n    const [typeMess, setTypeMess] = useState(\"\");\n\n    useEffect(() => {\n        const { name, room } = queryString.parse(location.search);\n\n        socket = io(ENDPOINT);\n\n        setRoom(room);\n        setName(name)\n\n        socket.emit('join', { name, room }, (error) => {\n            if (error) {\n                alert(error);\n            }\n        });\n    }, [ENDPOINT, location.search]);\n\n    useEffect(() => {\n        socket.on('message', message => {\n            setMessages(messages => [...messages, message]);\n        });\n\n        socket.on(\"roomData\", ({ users }) => {\n            setUsers(users);\n        });\n    }, []);\n\n    useEffect(() => {\n        socket.emit('typing', { typing }, (error) => {\n            console.log(typing, 'ererererere')\n            setTypeMess(typing);\n\n        })\n\n    }, [typing]);\n\n\n\n    const sendMessage = (event) => {\n        event.preventDefault();\n\n\n        if (message) {\n            socket.emit('sendMessage', message, () => setMessage(''));\n        }\n    }\n    console.log(typeMess);\n    return (\n        <div className=\"outerContainer\">\n            <TextContainer users={users} name={name} room={room} />\n            <div className=\"message__container\">\n                <image src={dots} />\n                <div className=\"container\">\n                    <InfoBar room={room} />\n                    <Messages messages={messages} name={name} />\n                    {typeMess}\n                    <InputMenu setMessage={setMessage} />\n                    <Input message={message} setMessage={setMessage} setTyping={setTyping} sendMessage={sendMessage} />\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}