{"ast":null,"code":"import { useEffect, useState } from 'react';\nexport default function useMedia(queries, values, defaultValue) {\n  var mediaQueryLists = queries.map(function (q) {\n    return window.matchMedia(q);\n  });\n\n  var getValue = function getValue() {\n    // Get index of first media query that matches\n    var index = mediaQueryLists.findIndex(function (mql) {\n      return mql.matches;\n    }); // Return related value or defaultValue if none\n\n    return typeof values[index] !== 'undefined' ? values[index] : defaultValue;\n  }; // State and setter for matched value\n\n\n  var _useState = useState(getValue),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  useEffect(function () {\n    var handler = function handler() {\n      return setValue(getValue);\n    }; // Set a listener for each media query with above handler as callback.\n\n\n    mediaQueryLists.forEach(function (mql) {\n      return mql.addListener(handler);\n    }); // Remove listeners on cleanup\n\n    return function () {\n      return mediaQueryLists.forEach(function (mql) {\n        return mql.removeListener(handler);\n      });\n    };\n  }, []);\n  return value;\n}","map":{"version":3,"sources":["/Users/nirmaperera/Desktop/chat-app/client/node_modules/react-giphy-searchbox/es/hooks/useMedia.js"],"names":["useEffect","useState","useMedia","queries","values","defaultValue","mediaQueryLists","map","q","window","matchMedia","getValue","index","findIndex","mql","matches","_useState","value","setValue","handler","forEach","addListener","removeListener"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAAkBC,OAAlB,EAA2BC,MAA3B,EAAmCC,YAAnC,EAAiD;AAC9D,MAAIC,eAAe,GAAGH,OAAO,CAACI,GAAR,CAAY,UAAUC,CAAV,EAAa;AAC7C,WAAOC,MAAM,CAACC,UAAP,CAAkBF,CAAlB,CAAP;AACD,GAFqB,CAAtB;;AAIA,MAAIG,QAAQ,GAAG,SAASA,QAAT,GAAoB;AACjC;AACA,QAAIC,KAAK,GAAGN,eAAe,CAACO,SAAhB,CAA0B,UAAUC,GAAV,EAAe;AACnD,aAAOA,GAAG,CAACC,OAAX;AACD,KAFW,CAAZ,CAFiC,CAKjC;;AACA,WAAO,OAAOX,MAAM,CAACQ,KAAD,CAAb,KAAyB,WAAzB,GAAuCR,MAAM,CAACQ,KAAD,CAA7C,GAAuDP,YAA9D;AACD,GAPD,CAL8D,CAc9D;;;AAEA,MAAIW,SAAS,GAAGf,QAAQ,CAACU,QAAD,CAAxB;AAAA,MACIM,KAAK,GAAGD,SAAS,CAAC,CAAD,CADrB;AAAA,MAEIE,QAAQ,GAAGF,SAAS,CAAC,CAAD,CAFxB;;AAIAhB,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAImB,OAAO,GAAG,SAASA,OAAT,GAAmB;AAC/B,aAAOD,QAAQ,CAACP,QAAD,CAAf;AACD,KAFD,CADoB,CAKpB;;;AACAL,IAAAA,eAAe,CAACc,OAAhB,CAAwB,UAAUN,GAAV,EAAe;AACrC,aAAOA,GAAG,CAACO,WAAJ,CAAgBF,OAAhB,CAAP;AACD,KAFD,EANoB,CAUpB;;AACA,WAAO,YAAY;AACjB,aAAOb,eAAe,CAACc,OAAhB,CAAwB,UAAUN,GAAV,EAAe;AAC5C,eAAOA,GAAG,CAACQ,cAAJ,CAAmBH,OAAnB,CAAP;AACD,OAFM,CAAP;AAGD,KAJD;AAKD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,SAAOF,KAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport default function useMedia(queries, values, defaultValue) {\n  var mediaQueryLists = queries.map(function (q) {\n    return window.matchMedia(q);\n  });\n\n  var getValue = function getValue() {\n    // Get index of first media query that matches\n    var index = mediaQueryLists.findIndex(function (mql) {\n      return mql.matches;\n    });\n    // Return related value or defaultValue if none\n    return typeof values[index] !== 'undefined' ? values[index] : defaultValue;\n  };\n\n  // State and setter for matched value\n\n  var _useState = useState(getValue),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  useEffect(function () {\n    var handler = function handler() {\n      return setValue(getValue);\n    };\n\n    // Set a listener for each media query with above handler as callback.\n    mediaQueryLists.forEach(function (mql) {\n      return mql.addListener(handler);\n    });\n\n    // Remove listeners on cleanup\n    return function () {\n      return mediaQueryLists.forEach(function (mql) {\n        return mql.removeListener(handler);\n      });\n    };\n  }, []);\n\n  return value;\n}"]},"metadata":{},"sourceType":"module"}