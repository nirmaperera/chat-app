{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nirmaperera/Desktop/chat-app/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport InfoBar from '../InforBar/InforBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nimport TextContainer from '../TextContainer/TextContainer';\nimport './Chat.css';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]); //const ENDPOINT = 'https://chat-application23.herokuapp.com/'\n\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    console.log(name, room);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]); //handle messages\n\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, []); //function for sending messages\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(TextContainer, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"NKZGbzfWHlS0Y+OfA88k1uWyNPI=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/nirmaperera/Desktop/chat-app/client/src/components/Chat/Chat.js"],"names":["React","useEffect","useState","queryString","io","InfoBar","Input","Messages","TextContainer","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","ENDPOINT","parse","search","console","log","emit","error","alert","on","sendMessage","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\n\nimport InfoBar from '../InforBar/InforBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nimport TextContainer from '../TextContainer/TextContainer';\n\nimport './Chat.css';\n\nlet socket;\n\nconst Chat = ({ location }) => {\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [users, setUsers] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    //const ENDPOINT = 'https://chat-application23.herokuapp.com/'\n\n    const ENDPOINT = 'localhost:5000';\n\n    useEffect(() => {\n        const { name, room } = queryString.parse(location.search);\n        console.log(name, room);\n        socket = io(ENDPOINT);\n\n        setName(name);\n        setRoom(room);\n\n        socket.emit('join', { name, room }, (error) => {\n            if (error) {\n                alert(error);\n            }\n        });\n\n    }, [ENDPOINT, location.search])\n\n    //handle messages\n    useEffect(() => {\n        socket.on('message', message => {\n            setMessages([...messages, message]);\n\n        });\n\n        socket.on(\"roomData\", ({ users }) => {\n            setUsers(users);\n        });\n    }, [])\n\n    //function for sending messages\n    const sendMessage = (e) => {\n        e.preventDefault();\n\n        if (message) {\n            socket.emit('sendMessage', message, () => setMessage(''))\n        }\n    }\n\n    console.log(message, messages);\n\n    return (\n        <div className=\"outerContainer\">\n            <TextContainer users={users} />\n            <div className=\"container\">\n                <InfoBar room={room} />\n                <Messages messages={messages} name={name} />\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n            </div>\n        </div>\n    )\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}