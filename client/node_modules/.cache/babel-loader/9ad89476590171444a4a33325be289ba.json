{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nirmaperera/Desktop/chat-app/client/src/components/reactions/reactions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PriorityHighOutlinedIcon from '@material-ui/icons/PriorityHighOutlined';\nimport InsertEmoticonOutlinedIcon from '@material-ui/icons/InsertEmoticonOutlined';\nimport './reaction.css';\n\nconst Reactions = ({\n  reaction\n}) => {\n  _s();\n\n  const [fav, setFav] = useState(false);\n  const [happy, setHappy] = useState(false);\n  const [dislike, setDislike] = useState(false);\n  const [like, setLike] = useState(false);\n  const [exclamation, setExclamation] = useState(false);\n  const [question, setQuestion] = useState(false); // const setHandleReaction =(reaction) =>{\n  //     if(reaction === 'fav'){\n  //         setFav(true);\n  //     }else if (reaction === 'happy'){\n  //         setHappy(true);\n  //     }else if (reaction === 'dislike'){\n  //         setDislike(true);\n  //     }else if (reaction === 'like'){\n  //         setLike(true)\n  //     }else if (reaction === 'exclamation'){\n  //         setExclamation(true)\n  //     }else{\n  //         setQuestion(true)\n  //     }\n  // }\n\n  console.log(reaction);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reactions__container\",\n    children: reaction.map(react => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: react\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 38\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reactions, \"CkB9oongyGxj8yRwHxb+WAy0wjY=\");\n\n_c = Reactions;\nexport default Reactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reactions\");","map":{"version":3,"sources":["/Users/nirmaperera/Desktop/chat-app/client/src/components/reactions/reactions.js"],"names":["React","useState","ThumbUpIcon","ThumbDownIcon","ContactSupportIcon","FavoriteIcon","PriorityHighOutlinedIcon","InsertEmoticonOutlinedIcon","Reactions","reaction","fav","setFav","happy","setHappy","dislike","setDislike","like","setLike","exclamation","setExclamation","question","setQuestion","console","log","map","react"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,0BAAP,MAAuC,2CAAvC;AAEA,OAAO,gBAAP;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAChC,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,KAAD,CAAxC,CANgC,CAQhC;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;AAEAqB,EAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,cACKA,QAAQ,CAACe,GAAT,CAAcC,KAAD,iBAAW;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,YAAxB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA1CD;;GAAMjB,S;;KAAAA,S;AA4CN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PriorityHighOutlinedIcon from '@material-ui/icons/PriorityHighOutlined';\nimport InsertEmoticonOutlinedIcon from '@material-ui/icons/InsertEmoticonOutlined';\n\nimport './reaction.css';\n\nconst Reactions = ({ reaction }) => {\n    const [fav, setFav] = useState(false);\n    const [happy, setHappy] = useState(false);\n    const [dislike, setDislike] = useState(false);\n    const [like, setLike] = useState(false);\n    const [exclamation, setExclamation] = useState(false);\n    const [question, setQuestion] = useState(false);\n\n    // const setHandleReaction =(reaction) =>{\n    //     if(reaction === 'fav'){\n    //         setFav(true);\n\n    //     }else if (reaction === 'happy'){\n    //         setHappy(true);\n\n    //     }else if (reaction === 'dislike'){\n    //         setDislike(true);\n\n    //     }else if (reaction === 'like'){\n    //         setLike(true)\n\n    //     }else if (reaction === 'exclamation'){\n    //         setExclamation(true)\n\n    //     }else{\n    //         setQuestion(true)\n\n    //     }\n    // }\n\n    console.log(reaction);\n    return (\n        <div className=\"reactions__container\">\n            {reaction.map((react) => <span>{react}</span>)}\n            {/* <FavoriteIcon onClick={()=> setHandleReaction(\"fav\")}/>\n            <InsertEmoticonOutlinedIcon onClick={()=> setHandleReaction(\"happy\")}/>\n            <ThumbDownIcon onClick={()=> setHandleReaction(\"dislike\")}/>\n            <ThumbUpIcon onClick={()=> setHandleReaction(\"like\")}/>\n            <PriorityHighOutlinedIcon onClick={()=> setHandleReaction(\"exclamation\")}/>\n            <ContactSupportIcon onClick={()=> setHandleReaction(\"question\")}/> */}\n        </div>\n    )\n}\n\nexport default Reactions;\n"]},"metadata":{},"sourceType":"module"}