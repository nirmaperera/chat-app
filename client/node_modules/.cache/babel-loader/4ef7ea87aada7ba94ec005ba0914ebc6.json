{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nirmaperera/Desktop/chat-app/client/src/components/Chat/Chat.js\",\n    _s5 = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport InfoBar from '../InforBar/InforBar';\nimport InputMenu from '../InputMenu/InputMenu';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nimport TextContainer from '../TextContainer/TextContainer';\nimport DotLoader from \"react-spinners/DotLoader\";\nimport errorImg from '../../assets/images/error.png';\nimport './Chat.scss'; //const ENDPOINT = 'https://chat-application23.herokuapp.com/'\n\nconst ENDPOINT = 'localhost:5000';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s5();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$(),\n      _s3 = $RefreshSig$(),\n      _s4 = $RefreshSig$();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [error, setError] = useState(false);\n  const [openMenu, setOpenMenu] = useState(true);\n  const [loading, setLoading] = useState(true);\n  const [themeDark, setThemeDark] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [typeMess, setTypeMess] = useState('');\n  const [originalTitle, setOriginalTitle] = useState();\n  const history = useHistory();\n\n  const usePrevious = value => {\n    _s();\n\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  };\n\n  _s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n  const useHasChanged = messages => {\n    _s2();\n\n    const prevVal = usePrevious(messages);\n    return prevVal !== messages;\n  };\n\n  _s2(useHasChanged, \"HoNKRQGo64iDpoe4UBQ72tkFRV0=\", false, function () {\n    return [usePrevious];\n  });\n\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    console.log(socket, 'SOCKET');\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        setError(true);\n      }\n\n      setLoading(false);\n    });\n\n    if (typing) {\n      socket.emit('typing', name);\n    }\n\n    socket.on('connect_error', error => {\n      alert('Server is currently down :( Please come back later!');\n      socket.disconnect();\n      history.push('/');\n    });\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(messages => [...messages, message]);\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, []);\n  useEffect(() => {\n    socket.on('typing', typeMess => {\n      setTypeMess(typeMess.data);\n    });\n  }, [name, typeMess]);\n  useEffect(_s3(() => {\n    _s3();\n\n    const hasVal1Changed = useHasChanged(val1);\n\n    if (!originalTitle && hasVal1Changed) {\n      setOriginalTitle(document.title);\n    }\n\n    console.log(messages, 'messages');\n    window.addEventListener('visibilitychange', handleTabChange);\n    return () => window.removeEventListener('visibilitychange', handleTabChange);\n  }, \"9+s3Kwg30FYfZ3bx5hXo0flFpyw=\", false, function () {\n    return [useHasChanged];\n  }));\n\n  const isTyping = typing => {\n    socket.emit('typing', name, typing, () => setTypeMess(''));\n  };\n\n  const handleTabChange = () => {\n    _s4();\n\n    const prevMessages = usePrevious(messages);\n\n    if (document.hidden) {\n      document.title = 'New message! ðŸ’¬ ';\n    } else {\n      document.title = originalTitle;\n    }\n  };\n\n  _s4(handleTabChange, \"jAhNP+r/j8ZFCS6IcRjG/Egw1Xs=\", false, function () {\n    return [usePrevious];\n  });\n\n  const sendMessage = event => {\n    event.preventDefault();\n    const time = new Date().toLocaleTimeString();\n\n    if (message) {\n      socket.emit('sendMessage', message, time, () => setMessage(''));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: themeDark ? 'chat chat__dark' : 'chat chat__light',\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"0 auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(DotLoader, {\n        size: 150,\n        color: \"#69D1D1\",\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"chat__loading\",\n        children: \"Setting up your chat room ... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__error\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: errorImg,\n            alt: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \" Join TeleChat! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatInner\",\n        children: [/*#__PURE__*/_jsxDEV(TextContainer, {\n          users: users,\n          userName: name,\n          room: room,\n          setOpenMenu: setOpenMenu,\n          menu: openMenu,\n          themeDark: themeDark,\n          setThemeDark: setThemeDark\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatInner__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatInner__inner\",\n            children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n              room: room,\n              setOpenMenu: setOpenMenu,\n              menu: openMenu,\n              themeDark: themeDark\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Messages, {\n              messages: messages,\n              name: name,\n              themeDark: themeDark\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 10\n            }, this), typeMess ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: themeDark ? \"chatInner__typing dark__typing\" : \"chatInner__typing light__typing\",\n              children: typeMess\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 22\n            }, this) : null, /*#__PURE__*/_jsxDEV(InputMenu, {\n              setMessage: setMessage,\n              themeDark: themeDark\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              message: message,\n              setMessage: setMessage,\n              sendMessage: sendMessage,\n              themeDark: themeDark,\n              setTyping: setTyping,\n              isTyping: isTyping\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 3\n  }, this);\n};\n\n_s5(Chat, \"2BOwrsgIy7jUVJhPK3RN2kbHdRQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/nirmaperera/Desktop/chat-app/client/src/components/Chat/Chat.js"],"names":["React","useEffect","useState","useRef","Link","useHistory","queryString","io","InfoBar","InputMenu","Input","Messages","TextContainer","DotLoader","errorImg","ENDPOINT","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","error","setError","openMenu","setOpenMenu","loading","setLoading","themeDark","setThemeDark","typing","setTyping","typeMess","setTypeMess","originalTitle","setOriginalTitle","history","usePrevious","value","ref","current","useHasChanged","prevVal","parse","search","console","log","emit","on","alert","disconnect","push","data","hasVal1Changed","val1","document","title","window","addEventListener","handleTabChange","removeEventListener","isTyping","prevMessages","hidden","sendMessage","event","preventDefault","time","Date","toLocaleTimeString","margin","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nimport InfoBar from '../InforBar/InforBar';\nimport InputMenu from '../InputMenu/InputMenu';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nimport TextContainer from '../TextContainer/TextContainer';\nimport DotLoader from \"react-spinners/DotLoader\";\nimport errorImg from '../../assets/images/error.png';\nimport './Chat.scss';\n\n//const ENDPOINT = 'https://chat-application23.herokuapp.com/'\nconst ENDPOINT = 'localhost:5000';\n\nlet socket;\n\nconst Chat = ({ location }) => {\n\tconst [name, setName] = useState('');\n\tconst [room, setRoom] = useState('');\n\tconst [users, setUsers] = useState('');\n\tconst [message, setMessage] = useState('');\n\tconst [messages, setMessages] = useState([]);\n\tconst [error, setError] = useState(false);\n\tconst [openMenu, setOpenMenu] = useState(true)\n\tconst [loading, setLoading] = useState(true);\n\tconst [themeDark, setThemeDark] = useState(false);\n\tconst [typing, setTyping] = useState(false);\n\tconst [typeMess, setTypeMess] = useState('');\n\tconst [originalTitle, setOriginalTitle] = useState();\n\n\n\tconst history = useHistory();\n\n\tconst usePrevious = (value) => {\n\t\tconst ref = useRef();\n\t\tuseEffect(() => {\n\t\t\tref.current = value;\n\t\t});\n\t\treturn ref.current;\n\t}\n\n\tconst useHasChanged = (messages) => {\n\t\tconst prevVal = usePrevious(messages)\n\t\treturn prevVal !== messages\n\t}\n\tuseEffect(() => {\n\t\tconst { name, room } = queryString.parse(location.search);\n\n\t\tsocket = io(ENDPOINT);\n\t\tconsole.log(socket, 'SOCKET');\n\n\t\tsetRoom(room);\n\t\tsetName(name)\n\n\t\tsocket.emit('join', { name, room }, (error) => {\n\t\t\tif (error) {\n\t\t\t\tsetError(true)\n\t\t\t}\n\t\t\tsetLoading(false);\n\t\t});\n\n\t\tif (typing) {\n\t\t\tsocket.emit('typing', name);\n\t\t}\n\n\t\tsocket.on('connect_error', (error) => {\n\t\t\talert('Server is currently down :( Please come back later!');\n\t\t\tsocket.disconnect()\n\t\t\thistory.push('/')\n\t\t});\n\n\t}, [ENDPOINT, location.search]);\n\n\tuseEffect(() => {\n\t\tsocket.on('message', message => {\n\t\t\tsetMessages(messages => [...messages, message]);\n\t\t});\n\n\n\n\t\tsocket.on(\"roomData\", ({ users }) => {\n\t\t\tsetUsers(users);\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tsocket.on('typing', typeMess => {\n\t\t\tsetTypeMess(typeMess.data);\n\t\t});\n\n\t}, [name, typeMess])\n\n\tuseEffect(() => {\n\t\tconst hasVal1Changed = useHasChanged(val1)\n\t\tif (!originalTitle && hasVal1Changed) {\n\t\t\tsetOriginalTitle(document.title);\n\t\t}\n\t\tconsole.log(messages, 'messages');\n\n\t\twindow.addEventListener('visibilitychange', handleTabChange);\n\t\treturn () => window.removeEventListener('visibilitychange', handleTabChange);\n\t});\n\n\tconst isTyping = (typing) => {\n\t\tsocket.emit('typing', name, typing, () => setTypeMess(''))\n\t}\n\tconst handleTabChange = () => {\n\t\tconst prevMessages = usePrevious(messages)\n\t\tif (document.hidden) {\n\t\t\tdocument.title = 'New message! ðŸ’¬ ';\n\t\t} else {\n\t\t\tdocument.title = originalTitle;\n\t\t}\n\t};\n\n\n\n\tconst sendMessage = (event) => {\n\t\tevent.preventDefault();\n\t\tconst time = new Date().toLocaleTimeString();\n\n\t\tif (message) {\n\t\t\tsocket.emit('sendMessage', message, time, () => setMessage(''));\n\t\t}\n\t}\n\n\n\n\treturn (\n\t\t<div className={themeDark ? 'chat chat__dark' : 'chat chat__light'}>\n\t\t\t{loading ?\n\t\t\t\t<div style={{ margin: \"0 auto\" }}>\n\t\t\t\t\t<DotLoader\n\t\t\t\t\t\tsize={150}\n\t\t\t\t\t\tcolor={\"#69D1D1\"}\n\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t/>\n\t\t\t\t\t<p className=\"chat__loading\">Setting up your chat room ... </p>\n\t\t\t\t</div>\n\t\t\t\t:\n\t\t\t\t<div style={{ width: \"100%\", height: \"100%\" }}>\n\t\t\t\t\t{error ? <div className=\"chat__error\">\n\t\t\t\t\t\t<div> <img src={errorImg} alt=\"error\"></img></div>\n\t\t\t\t\t\t<Link to={\"/\"}>\n\t\t\t\t\t\t\t<button> Join TeleChat! </button>\n\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t</div> :\n\t\t\t\t\t\t<div className=\"chatInner\">\n\t\t\t\t\t\t\t<TextContainer users={users} userName={name} room={room} setOpenMenu={setOpenMenu} menu={openMenu} themeDark={themeDark} setThemeDark={setThemeDark} />\n\t\t\t\t\t\t\t<div className=\"chatInner__main\">\n\t\t\t\t\t\t\t\t<div className=\"chatInner__inner\">\n\t\t\t\t\t\t\t\t\t<InfoBar room={room} setOpenMenu={setOpenMenu} menu={openMenu} themeDark={themeDark} />\n\t\t\t\t\t\t\t\t\t<Messages messages={messages} name={name} themeDark={themeDark} />\n\t\t\t\t\t\t\t\t\t{typeMess ? <p className={themeDark ? \"chatInner__typing dark__typing\" : \"chatInner__typing light__typing\"}>{typeMess}</p> : null}\n\n\t\t\t\t\t\t\t\t\t<InputMenu setMessage={setMessage} themeDark={themeDark} />\n\t\t\t\t\t\t\t\t\t<Input message={message} setMessage={setMessage} sendMessage={sendMessage} themeDark={themeDark} setTyping={setTyping} isTyping={isTyping} />\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>}\n\t\t</div>\n\t);\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}