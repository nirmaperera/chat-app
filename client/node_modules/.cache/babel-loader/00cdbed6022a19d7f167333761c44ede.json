{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nirmaperera/Desktop/chat-app/client/src/components/gifSearch/gif.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactGiphySearchbox from \"react-giphy-searchbox\";\nimport './gifSearch.css';\n\nconst Gif = ({\n  setMessage,\n  setClickGif,\n  setClickStickers,\n  library\n}) => {\n  _s();\n\n  const [gif, setGif] = useState(\"\");\n  const [stickers, setStickers] = useState(\"\");\n\n  const selectMedia = item => {\n    console.log(item);\n\n    if (library === 'stickers') {\n      setStickers(item.images.original.url);\n      setMessage(item.images.original.url);\n      setClickStickers(false);\n    } else {\n      setGif(item.images.original.url);\n      setMessage(item.images.original.url);\n      setClickGif(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ReactGiphySearchbox, {\n      apiKey: \"7mG2YLq7OBLyrlxpi0o64vb0mB8wHHPh\",\n      onSelect: item => selectMedia(item),\n      library: library,\n      masonryConfig: [{\n        columns: 2,\n        imageWidth: 110,\n        gutter: 5\n      }, {\n        mq: \"700px\",\n        columns: 6,\n        imageWidth: 120,\n        gutter: 5\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Gif, \"5o7WDhdf+rIu60CDHjTPGY/nzn4=\");\n\n_c = Gif;\nexport default Gif;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gif\");","map":{"version":3,"sources":["/Users/nirmaperera/Desktop/chat-app/client/src/components/gifSearch/gif.js"],"names":["React","useState","ReactGiphySearchbox","Gif","setMessage","setClickGif","setClickStickers","library","gif","setGif","stickers","setStickers","selectMedia","item","console","log","images","original","url","columns","imageWidth","gutter","mq"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AAEA,OAAO,iBAAP;;AAGA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,WAAd;AAA2BC,EAAAA,gBAA3B;AAA6CC,EAAAA;AAA7C,CAAD,KAA4D;AAAA;;AACpE,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMW,WAAW,GAAIC,IAAD,IAAU;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,QAAIN,OAAO,KAAK,UAAhB,EAA4B;AACxBI,MAAAA,WAAW,CAACE,IAAI,CAACG,MAAL,CAAYC,QAAZ,CAAqBC,GAAtB,CAAX;AACAd,MAAAA,UAAU,CAACS,IAAI,CAACG,MAAL,CAAYC,QAAZ,CAAqBC,GAAtB,CAAV;AACAZ,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,KAJD,MAKK;AACDG,MAAAA,MAAM,CAACI,IAAI,CAACG,MAAL,CAAYC,QAAZ,CAAqBC,GAAtB,CAAN;AACAd,MAAAA,UAAU,CAACS,IAAI,CAACG,MAAL,CAAYC,QAAZ,CAAqBC,GAAtB,CAAV;AACAb,MAAAA,WAAW,CAAC,KAAD,CAAX;AAEH;AACJ,GAbD;;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI,QAAC,mBAAD;AACI,MAAA,MAAM,EAAC,kCADX;AAEI,MAAA,QAAQ,EAAEQ,IAAI,IAAID,WAAW,CAACC,IAAD,CAFjC;AAGI,MAAA,OAAO,EAAEN,OAHb;AAII,MAAA,aAAa,EAAE,CACX;AAAEY,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,UAAU,EAAE,GAA1B;AAA+BC,QAAAA,MAAM,EAAE;AAAvC,OADW,EAEX;AAAEC,QAAAA,EAAE,EAAE,OAAN;AAAeH,QAAAA,OAAO,EAAE,CAAxB;AAA2BC,QAAAA,UAAU,EAAE,GAAvC;AAA4CC,QAAAA,MAAM,EAAE;AAApD,OAFW;AAJnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAjCD;;GAAMlB,G;;KAAAA,G;AAmCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport ReactGiphySearchbox from \"react-giphy-searchbox\";\n\nimport './gifSearch.css';\n\n\nconst Gif = ({ setMessage, setClickGif, setClickStickers, library }) => {\n    const [gif, setGif] = useState(\"\");\n    const [stickers, setStickers] = useState(\"\");\n\n    const selectMedia = (item) => {\n        console.log(item);\n        if (library === 'stickers') {\n            setStickers(item.images.original.url)\n            setMessage(item.images.original.url)\n            setClickStickers(false);\n        }\n        else {\n            setGif(item.images.original.url)\n            setMessage(item.images.original.url)\n            setClickGif(false)\n\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <ReactGiphySearchbox\n                apiKey=\"7mG2YLq7OBLyrlxpi0o64vb0mB8wHHPh\"\n                onSelect={item => selectMedia(item)}\n                library={library}\n                masonryConfig={[\n                    { columns: 2, imageWidth: 110, gutter: 5 },\n                    { mq: \"700px\", columns: 6, imageWidth: 120, gutter: 5 }\n                ]}\n            />\n\n        </div>\n    );\n}\n\nexport default Gif;"]},"metadata":{},"sourceType":"module"}