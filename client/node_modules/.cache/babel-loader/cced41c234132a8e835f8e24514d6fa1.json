{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nirmaperera/Desktop/chat-app/client/src/components/Input/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Input.css';\n\nconst Input = ({\n  setMessage,\n  sendMessage,\n  message\n}) => {\n  _s();\n\n  let timer,\n      timeoutVal = 1000;\n  const [typing, setTyping] = useState(false);\n\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage(e);\n    } else {\n      window.clearTimeout(timer);\n      setTyping(true);\n    } //event => event.key === 'Enter' ? sendMessage(event) : null\n\n  };\n\n  const handleKeyUp = e => {\n    window.clearTimeout(timer);\n    timer = window.setTimeout(() => {\n      setTyping(false);\n    }, timeoutVal);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"message_input\",\n      type: \"text\",\n      placeholder: \"Type a message...\",\n      value: message,\n      onChange: ({\n        target: {\n          value\n        }\n      }) => setMessage(value),\n      onKeyPress: e => handleKeyPress(e),\n      onKeyUp: e => handleKeyUp(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"sendButton\",\n      onClick: e => sendMessage(e),\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Input, \"pPb8AaK1zl0hEJQXUwiiThaV+lQ=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/nirmaperera/Desktop/chat-app/client/src/components/Input/Input.js"],"names":["React","useState","Input","setMessage","sendMessage","message","timer","timeoutVal","typing","setTyping","handleKeyPress","e","key","window","clearTimeout","handleKeyUp","setTimeout","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,aAAP;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,WAAd;AAA2BC,EAAAA;AAA3B,CAAD,KAA0C;AAAA;;AACpD,MAAIC,KAAJ;AAAA,MAAWC,UAAU,GAAG,IAAxB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMS,cAAc,GAAIC,CAAD,IAAO;AAC1B,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACnBR,MAAAA,WAAW,CAACO,CAAD,CAAX;AACH,KAFD,MAEO;AACHE,MAAAA,MAAM,CAACC,YAAP,CAAoBR,KAApB;AACAG,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH,KANyB,CAO1B;;AACH,GARD;;AASA,QAAMM,WAAW,GAAIJ,CAAD,IAAO;AACvBE,IAAAA,MAAM,CAACC,YAAP,CAAoBR,KAApB;AACAA,IAAAA,KAAK,GAAGO,MAAM,CAACG,UAAP,CAAkB,MAAM;AAC5BP,MAAAA,SAAS,CAAC,KAAD,CAAT;AACH,KAFO,EAELF,UAFK,CAAR;AAGH,GALD;;AAOA,sBACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,4BACI;AACI,MAAA,SAAS,EAAC,eADd;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,WAAW,EAAC,mBAHhB;AAII,MAAA,KAAK,EAAEF,OAJX;AAKI,MAAA,QAAQ,EAAE,CAAC;AAAEY,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV,OAAD,KAA2Bf,UAAU,CAACe,KAAD,CALnD;AAMI,MAAA,UAAU,EAAGP,CAAD,IAAOD,cAAc,CAACC,CAAD,CANrC;AAOI,MAAA,OAAO,EAAGA,CAAD,IAAOI,WAAW,CAACJ,CAAD;AAP/B;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAEA,CAAC,IAAIP,WAAW,CAACO,CAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAlCD;;GAAMT,K;;KAAAA,K;AAoCN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport './Input.css';\n\nconst Input = ({ setMessage, sendMessage, message }) => {\n    let timer, timeoutVal = 1000;\n    const [typing, setTyping] = useState(false);\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            sendMessage(e)\n        } else {\n            window.clearTimeout(timer)\n            setTyping(true);\n        }\n        //event => event.key === 'Enter' ? sendMessage(event) : null\n    }\n    const handleKeyUp = (e) => {\n        window.clearTimeout(timer);\n        timer = window.setTimeout(() => {\n            setTyping(false);\n        }, timeoutVal);\n    }\n\n    return (\n        <form className=\"form\">\n            <input\n                className=\"message_input\"\n                type=\"text\"\n                placeholder=\"Type a message...\"\n                value={message}\n                onChange={({ target: { value } }) => setMessage(value)}\n                onKeyPress={(e) => handleKeyPress(e)}\n                onKeyUp={(e) => handleKeyUp(e)}\n            />\n            <button className=\"sendButton\" onClick={e => sendMessage(e)}>Send</button>\n        </form>\n    )\n}\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}